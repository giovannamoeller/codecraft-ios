{
  "sourceLanguage" : "en",
  "strings" : {
    "%@" : {

    },
    "%@ is empty!" : {

    },
    "%@ Quiz" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "%@ Quiz"
          }
        }
      }
    },
    "%lld" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "%lld"
          }
        }
      }
    },
    "A series of connected carriages." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Uma série de vagões conectados."
          }
        }
      }
    },
    "A singly linked list is a linear data structure where each element (node) contains data and a reference to the next node in the sequence. The last node points to null, indicating the end of the list." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Uma lista ligada simples é uma estrutura de dados linear onde cada elemento (nó) contém dados e uma referência para o próximo nó na sequência. O último nó aponta para nulo, indicando o fim da lista."
          }
        }
      }
    },
    "Add or remove elements to see how a queue operates." : {

    },
    "Add or remove elements to see how a stack operates." : {

    },
    "Adjacent Comparisons" : {

    },
    "An array is a data structure that stores a collection of elements of the same type in contiguous memory locations. Each element in an array is identified by an index or a key." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Um array é uma estrutura de dados que armazena uma coleção de elementos do mesmo tipo em locais de memória contíguos. Cada elemento em um array é identificado por um índice ou uma chave."
          }
        }
      }
    },
    "arrays" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "arrays"
          }
        }
      }
    },
    "Arrays are zero-indexed: The first element is at index 0." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Arrays são baseados em índice zero: O primeiro elemento está no índice 0."
          }
        }
      }
    },
    "Arrays have a fixed size in some languages, but can be dynamic in others." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Arrays podem possuir tamanho fixo em algumas linguagens, porém dinâmico em outras"
          }
        }
      }
    },
    "Best suited for sorting small arrays or lists where simplicity is more important than efficiency." : {

    },
    "Bidirectional" : {

    },
    "Books arranged in order." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Livros organizados em ordem."
          }
        }
      }
    },
    "Bookshelf" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Estante de livros"
          }
        }
      }
    },
    "Browser History" : {

    },
    "Build Sorted Portion" : {

    },
    "Builds the final sorted array one item at a time, by inserting each element into its correct position." : {

    },
    "Bus Stop" : {

    },
    "Calendar" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Calendário"
          }
        }
      }
    },
    "Choose Your Adventure" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Livro jogo"
          }
        }
      }
    },
    "Common operations" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Operações comuns"
          }
        }
      }
    },
    "Common operations: Insertion, deletion, and accessing elements." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Operações comuns: inserção, remoção e acesso de elementos."
          }
        }
      }
    },
    "Computer memory uses a stack to manage function calls and returns." : {

    },
    "Conga line" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Fila de Conga"
          }
        }
      }
    },
    "Data Buffer" : {

    },
    "Days of the month in sequence." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Dias do mês em sequência."
          }
        }
      }
    },
    "Doubly linked lists can grow or shrink dynamically as needed." : {

    },
    "Doubly linked lists consist of nodes, each containing data and references to both the next and previous nodes." : {

    },
    "Dynamic size" : {

    },
    "Each car is connected to the next one." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Cada vagão está conectado ao próximo."
          }
        }
      }
    },
    "Each clue leads to the location of the next clue." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Cada pista leva à localização da próxima pista."
          }
        }
      }
    },
    "Each element has a unique index: Used to access or modify the element." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Cada elemento possuí um índice único: Usado para acessar ou modificar elementos"
          }
        }
      }
    },
    "Each page points to the next part of the story." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Cada página aponta para a próxima parte da história."
          }
        }
      }
    },
    "Each person holds the next person's shoulders." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Cada pessoa segura os ombros da pessoa à frente."
          }
        }
      }
    },
    "Efficient for Small Arrays" : {

    },
    "Efficient insertions" : {

    },
    "Efficient insertions and deletions" : {

    },
    "Elements are accessed sequentially, starting from the head." : {

    },
    "Elements can be traversed in both directions." : {

    },
    "First In, First Out (FIFO)" : {

    },
    "Fixed and Dynamic" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Fixo e dinâmico"
          }
        }
      }
    },
    "For implementing forward and backward functionality in music players." : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Para implementar funcionalidades de avançar e retroceder em players de música."
          }
        }
      }
    },
    "For implementing other data structures like stacks and queues." : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Para implementar outras estruturas de dados como pilhas e filas."
          }
        }
      }
    },
    "For implementing undo functionality in applications." : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Para implementar funcionalidade de desfazer em aplicações."
          }
        }
      }
    },
    "Function Call Stack" : {

    },
    "Hello, World!" : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Olá, Mundo!"
          }
        }
      }
    },
    "How to work with Arrays" : {
      "extractionState" : "stale",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Como trabalhar com arrays"
          }
        }
      }
    },
    "Ideal for Small Arrays" : {

    },
    "In computing, queues are used to manage data flow between processes." : {

    },
    "In scenarios where memory locality is important for performance." : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Em cenários onde a localidade de memória é importante para o desempenho."
          }
        }
      }
    },
    "In symbol tables of compiler design." : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Em tabelas de símbolos de compiladores."
          }
        }
      }
    },
    "In-Place Algorithm" : {

    },
    "In-place Sorting" : {

    },
    "Inserting elements at the beginning or end is very efficient (O(1) time)." : {

    },
    "Inserting or removing elements at any position is very efficient (O(1) time)." : {

    },
    "Last In, First Out (LIFO)" : {

    },
    "Learn More" : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Saiba mais"
          }
        }
      }
    },
    "Let's get started" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Vamos iniciar"
          }
        }
      }
    },
    "Like a line of people waiting, the first person to join is the first to leave." : {

    },
    "Like a stack of plates, the last item added is the first one removed." : {

    },
    "Linked lists can grow or shrink dynamically as needed." : {

    },
    "Linked lists consist of nodes, each containing data and a reference to the next node." : {

    },
    "Navigating back through web pages works like a stack." : {

    },
    "Node-based" : {

    },
    "Numbered spaces in a row." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Vagas numeradas em sequência."
          }
        }
      }
    },
    "O(n^2) time complexity in the average and worst cases, but can be O(n) in the best case." : {

    },
    "O(n^2) time complexity in the average and worst cases, where n is the number of items." : {

    },
    "Observe how the array changes as you perform operations below." : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Observe como o array altera enquanto você performa as operações abaixo."
          }
        }
      }
    },
    "Parking Lot" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Estacionamento"
          }
        }
      }
    },
    "People board the bus in the order they arrived at the stop." : {

    },
    "Performs well for small data sets or partially sorted arrays." : {

    },
    "Pop" : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Pop"
          }
        }
      }
    },
    "Practice" : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Praticar"
          }
        }
      }
    },
    "Press 'start sorting' to see the algorithm in action." : {

    },
    "Print jobs are processed in the order they are received." : {

    },
    "Printer Queue" : {

    },
    "Push" : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Push"
          }
        }
      }
    },
    "Queue is empty!" : {

    },
    "Quiz completed!" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Quiz realizado!"
          }
        }
      }
    },
    "Real world analogies" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Analogias do mundo real"
          }
        }
      }
    },
    "Repeatedly steps through the list, compares adjacent elements and swaps them if they're in the wrong order." : {

    },
    "Reset" : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Resetar"
          }
        }
      }
    },
    "Section %$lld" : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Seção %$lld"
          }
        }
      }
    },
    "Sequential access" : {

    },
    "singly linked lists" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "listas ligadas simples"
          }
        }
      }
    },
    "Sorts the array in-place, requiring only a constant amount O(1) of additional memory space." : {

    },
    "Speed:" : {

    },
    "Stack is empty!" : {

    },
    "Start Quiz" : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Iniciar Quiz"
          }
        }
      }
    },
    "Submit answers" : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Submeter respostas"
          }
        }
      }
    },
    "The undo feature in many applications uses a stack to keep track of actions." : {

    },
    "Time Complexity" : {

    },
    "Train" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Trem"
          }
        }
      }
    },
    "Train cars" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Vagões de trem"
          }
        }
      }
    },
    "Treasure Hunt" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Caça ao tesouro"
          }
        }
      }
    },
    "Undo Functionality" : {

    },
    "Unique index" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Índice único"
          }
        }
      }
    },
    "Velocity" : {

    },
    "Visualize how a queue works" : {

    },
    "Visualize how a stack works" : {

    },
    "Visualize how an array works" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Visualize como um array funciona"
          }
        }
      }
    },
    "When frequent insertion and deletion at the beginning is needed." : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Quando é necessária inserção e remoção frequente no início."
          }
        }
      }
    },
    "When to use" : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Quando usar"
          }
        }
      }
    },
    "When working with sequences of data (e.g., time series)." : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Ao trabalhar com sequências de dados (por exemplo, séries temporais)."
          }
        }
      }
    },
    "When you need quick access to elements by index." : {
      "extractionState" : "manual",
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Quando você precisa de acesso rápido aos elementos por índice."
          }
        }
      }
    },
    "You got %lld out of %lld questions correct." : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "You got %1$lld out of %2$lld questions correct."
          }
        },
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Você obteve %1$lld de %2$lld quest\u000eões corretas."
          }
        }
      }
    },
    "Zero-indexed" : {
      "localizations" : {
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Índice 0"
          }
        }
      }
    }
  },
  "version" : "1.0"
}